def is_valid(board, row, col, num):
    # Check the row and column for the number
    for x in range(9):
        if board[row][x] == num or board[x][col] == num:
            return False

    # Check the 3x3 box for the number
    start_row, start_col = row - row % 3, col - col % 3
    for i in range(3):
        for j in range(3):
            if board[i + start_row][j + start_col] == num:
                return False
    return True


def solve_sudoku(board):
    for i in range(9):
        for j in range(9):
            if board[i][j] == 0:
                for num in range(1, 10):
                    if is_valid(board, i, j, num):
                        board[i][j] = num
                        if solve_sudoku(board):
                            return True
                        board[i][j] = 0
                return False
    return True


def print_board(board):
    for i in range(9):
        for j in range(9):
            print(board[i][j], end=" ")
            if (j + 1) % 3 == 0 and j < 8:
                print("|", end=" ")
        print()
        if (i + 1) % 3 == 0 and i < 8:
            print("- - - - - - - - - - -")


def get_user_input():
    board = []
    for i in range(9):
        row = input(f"Enter row {i+1} (space-separated numbers): ")
        board.append([int(x) for x in row.split()])
    return board


def main():
    print("Enter the Sudoku board:")
    board = get_user_input()
    if solve_sudoku(board):
        print("Solved board:")
        print_board(board)
    else:
        print("No solution exists")


if __name__ == "__main__":
    main()